# from django.core.management.base import BaseCommand
# from homestays.models import Province, District, Commune

# class Command(BaseCommand):
#     help = "Seed initial address data (Provinces, Districts, Communes)"

#     def handle(self, *args, **kwargs):
#         # X√≥a d·ªØ li·ªáu c≈© ƒë·ªÉ tr√°nh tr√πng l·∫∑p
#         Commune.objects.all().delete()
#         District.objects.all().delete()
#         Province.objects.all().delete()

#         # Danh s√°ch ƒë·ªãa ch·ªâ ƒë·ªÉ seed
#         address_data = [
#             {
#                 "province": "H√† N·ªôi",
#                 "districts": [
#                     {
#                         "name": "Ba ƒê√¨nh",
#                         "communes": ["Ng·ªçc Kh√°nh", "Kim M√£", "Gi·∫£ng V√µ"]
#                     },
#                     {
#                         "name": "Ho√†n Ki·∫øm",
#                         "communes": ["H√†ng B√†i", "H√†ng Tr·ªëng", "Tr√†ng Ti·ªÅn"]
#                     }
#                 ]
#             },
#             {
#                 "province": "H·ªì Ch√≠ Minh",
#                 "districts": [
#                     {
#                         "name": "Qu·∫≠n 1",
#                         "communes": ["B·∫øn Ngh√©", "B·∫øn Th√†nh", "Ph·∫°m Ng≈© L√£o"]
#                     },
#                     {
#                         "name": "Qu·∫≠n 3",
#                         "communes": ["V√µ Th·ªã S√°u", "Ph∆∞·ªùng 6", "Ph∆∞·ªùng 7"]
#                     }
#                 ]
#             },
#             {
#                 "province": "ƒê√† N·∫µng",
#                 "districts": [
#                     {
#                         "name": "H·∫£i Ch√¢u",
#                         "communes": ["H·∫£i Ch√¢u 1", "H·∫£i Ch√¢u 2", "Ph∆∞·ªõc Ninh"]
#                     },
#                     {
#                         "name": "S∆°n Tr√†",
#                         "communes": ["An H·∫£i B·∫Øc", "An H·∫£i ƒê√¥ng", "N·∫°i Hi√™n ƒê√¥ng"]
#                     }
#                 ]
#             },
#             {
#                 "province": "L√¢m ƒê·ªìng",
#                 "districts": [
#                     {
#                         "name": "ƒê√† L·∫°t",
#                         "communes": ["Ph∆∞·ªùng 1", "Ph∆∞·ªùng 2", "Ph∆∞·ªùng 3"]
#                     },
#                     {
#                         "name": "B·∫£o L·ªôc",
#                         "communes": ["B'Lao", "L·ªôc Ph√°t", "L·ªôc S∆°n"]
#                     }
#                 ]
#             }
#         ]

#         # Seed d·ªØ li·ªáu
#         for province_data in address_data:
#             province = Province.objects.create(name=province_data["province"])
#             for district_data in province_data["districts"]:
#                 district = District.objects.create(name=district_data["name"], province=province)
#                 for commune_name in district_data["communes"]:
#                     Commune.objects.create(name=commune_name, district=district)

#         self.stdout.write(self.style.SUCCESS("‚úÖ Address seeding completed!"))


import requests
from django.core.management.base import BaseCommand
from homestays.models import Province, District, Commune

class Command(BaseCommand):
    help = "Seed full Vietnam address data from one API call"

    def handle(self, *args, **kwargs):
        # Xo√° d·ªØ li·ªáu c≈©
        Commune.objects.all().delete()
        District.objects.all().delete()
        Province.objects.all().delete()

        self.stdout.write("üîÅ ƒêang g·ªçi API l·∫•y to√†n b·ªô ƒë·ªãa ch·ªâ...")
        url = "https://provinces.open-api.vn/api/?depth=3"
        response = requests.get(url)

        if response.status_code != 200:
            self.stdout.write(self.style.ERROR("‚ùå L·ªói khi g·ªçi API!"))
            return

        provinces = response.json()

        for p in provinces:
            province = Province.objects.create(name=p["name"])
            for d in p.get("districts", []):
                district = District.objects.create(name=d["name"], province=province)
                for w in d.get("wards", []):
                    Commune.objects.create(name=w["name"], district=district)

        self.stdout.write(self.style.SUCCESS("‚úÖ ƒê√£ seed ƒë·∫ßy ƒë·ªß t·ªânh/huy·ªán/x√£ t·ª´ m·ªôt l·∫ßn g·ªçi API!"))
